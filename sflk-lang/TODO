
BEFORE EVERYTHING ELSE
- clean up everything !!!!

STRING TREE STYLES REVISION
- string tree may have named nodes that are printed like that:
		program
		├─if
		│ │condition
		│ ├─invalid
		│ │then branch
		│ ├─no then branch
		│ │else branch
		│ └─invalid
		└─invalid
	or
		program
		├─if
		│ │┌condition
		│ ├┴─invalid
		│ │┌then branch
		│ ├┴─no then branch
		│ │┌else branch
		│ └┴─invalid
		└─invalid
	or ohter styles,
	actually it should be very customisable,
	with the named node style being choosble from a list of styles
	and with empty nodes being able to be disabled
	and named nodes being able to be disabled

AST REVISION
- attach a warning list to nodes
- nodes may have erroneous variants *describing the error*

PROGRAM REVISION
- statements, expressions, chops and literals may be erroneous

DEBUG REVISION
- see the tokens
- see the indented log of token reading and AST building

TODO
- lp wh 1 ao bd dh {} sp dh {}
- ev ,,, ,8 ,4 ,2

#########################################################
- display runtime errors nicely (embbed optionnal statement loc ?)
- display parsed tree even in case of a parsing error
- display indented_log even in case of a runtime error
- be able to display warning
- modular parser ?
- lib build target for integration in the language server
- debug expression using $ like this:
	x < y + $(z - a / $b) # dbg b, then dbg (z - a / $b) #
	(or not ?)
- breakpoints that open a debug repl
- debug repl commands can be used in the code with prefix $$
- normal repl
- read and write to variables of other contexts with more precision
- good loop and conditional syntaxes
- bock *call* syntax (or not ?)
- @ is now the current cx (or not ?)
- maybe merge
- globals
- types, conersions
- lazy expressions
- signals (print is a signal going down the stack, input goes up, etc.)
- make runtime objects embed their trace
- call stack is actually a tree
	- signals going downward leave a way up the tree
	- signals going upward follow a way up the tree, consuming it
	- printing is a signal
	- reading input is a signal
	- reading and writing may be signals
