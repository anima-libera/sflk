%YAML 1.2
---
name: SFLK
file_extensions: [sflk, Sflk, SFLK]
scope: source.sflk

contexts:

  main:
    - match: '#'
      scope: punctuation.definition.comment.begin.sflk
      push: comment
    - match: '\('
      scope: punctuation.section.parens.begin.sflk
      push: paren
    - match: '\)'
      scope: invalid.illegal.sflk
    - match: '\{'
      scope: punctuation.section.braces.begin.sflk
      push: curly
    - match: '\}'
      scope: invalid.illegal.sflk
    - match: '"'
      scope: punctuation.definition.string.begin.sflk
      push: string_litteral
    - match: '[0-9]+'
      scope: constant.numeric.integer.decimal.sflk
    - match: '(<~|<)'
      scope: keyword.operator.assignment.flk
    - match: '\+|\-|\*|/'
      scope: keyword.operator.arithmetic.sflk
    - match: '\b(if)\b'
      scope: keyword.control.conditional.if.sflk
    - match: '\b(pr|nl|do|redo|end|imp|exp)\b'
      scope: keyword.other.sflk
    - match: '[a-zA-Z]+'
      scope: variable.sflk

  comment:
    - meta_scope: comment.block.sflk
    - match: '#'
      scope: punctuation.definition.comment.end.sflk
      pop: true

  paren:
    - match: '\)'
      scope: punctuation.section.parens.end.sflk
      pop: true
    - include: main

  curly:
    - match: '\}'
      scope: punctuation.section.braces.end.sflk
      pop: true
    - include: main

  string_litteral:
    - meta_scope: string.quoted.double.sflk
    - match: '\\$'
      scope: source.sflk
    - match: '\\(\\|\"|n|t|e|a|b|v|f|r|(x[0-9a-fA-F]{2}))'
      scope: constant.character.escape.sflk
    - match: '"'
      scope: punctuation.definition.string.end.sflk
      pop: true
